---
interface props {
  data: Object,
};

/* data = {
  0: {
    src: "/img/placeholder.webp",
    link: "/project/placeholder", (optional)
  },
  1: {
    ...
  },
} */
const data = Astro.props.data || {};
---

{Object.entries(data).length > 0 && (
  <div class="grid grid-cols-1 md:grid-cols-2">
    <div class="border md:row-span-2">
      {data[4] ? (
        data[4].link ? (
          <a href={data[4].link}>
            <img class="h-full w-full" src={data[4].src} />
          </a>
        ) : (
          <img class="h-full w-full" src={data[4].src} />
        )
      ) : (
        <img class="h-full w-full" src="/img/placeholder.webp" />
      )}
    </div>
    <div class="grid grid-cols-2 grid-rows-2">
      {Object.entries(data).slice(0, 4).map(([key, value]) => (
        <div class="border" key={key}>
          {value.link ? (
            <a href={value.link}>
              <img src={value.src} />
            </a>
          ) : (
            <img src={value.src} />
          )}
        </div>
      ))}
    </div>
  </div>
)}